{"version":3,"sources":["scripts/main.js"],"names":["openAndCloseInfoPanel","rulesBtnEl","document","querySelector","closeBtnEl","rulesEl","addEventListener","showRulesInformation","classList","add","closeRulesInformation","remove","playGameWidthCanvas","BALL_SIZE","BRICK_ROW_COUNT","MAIN_COLOR","canvas","ctx","getContext","score","keyDown","event","key","paddle","dx","speed","keyUp","ball","x","width","y","height","size","dy","brickInfo","padding","offsetX","offsetY","visible","bricks","i","j","showAllBricks","forEach","column","brick","update","movePaddle","moveBall","clearRect","beginPath","arc","Math","PI","fillStyle","fill","closePath","rect","font","fillText","requestAnimationFrame"],"mappings":"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","file":"main.39ec49cd.js","sourceRoot":"../src","sourcesContent":["'use strict';\n/* eslint-disable */\n\nopenAndCloseInfoPanel();\nplayGameWidthCanvas();\n\nfunction openAndCloseInfoPanel() {\n  const rulesBtnEl = document.querySelector('#rules-btn');\n  const closeBtnEl = document.querySelector('#close-btn');\n  const rulesEl = document.querySelector('#rules');\n\n  rulesBtnEl.addEventListener('click', showRulesInformation);\n  closeBtnEl.addEventListener('click', closeRulesInformation);\n\n  function showRulesInformation() {\n    rulesEl.classList.add('show');\n  }\n\n  function closeRulesInformation() {\n    rulesEl.classList.remove('show');\n  }\n}\n\nfunction playGameWidthCanvas() {\n  const BALL_SIZE = 10;\n  const BALL_SPEED = 4;\n  const PADDLE_SIZE = 90;\n  const PADDLE_SPEED = 8;\n  const BRICK_ROW_COUNT = 9;\n  const BRICK_COLUMN_COUNT = 5;\n  const MAIN_COLOR = '#14adb3';\n\n  const canvas = document.querySelector('#canvas');\n  const ctx = canvas.getContext('2d');\n\n  let score = 0;\n\n  document.addEventListener('keydown', keyDown);\n  document.addEventListener('keyup', keyUp);\n\n  // Create ball props.\n  const ball = {\n    x: canvas.width / 2,\n    y: canvas.height / 2,\n    size: BALL_SIZE,\n    speed: BALL_SPEED,\n    dx: 4,\n    dy: -4,\n  };\n\n  // Create paddle props.\n  const paddle = {\n    x: canvas.width / 2 - 40,\n    y: canvas.height - 20,\n    width: PADDLE_SIZE,\n    height: 10,\n    speed: PADDLE_SPEED,\n    dx: 0,\n  };\n\n  // Create brick drops.\n  const brickInfo = {\n    width: 70,\n    height: 20,\n    padding: 10,\n    offsetX: 45,\n    offsetY: 60,\n    visible: true,\n  };\n\n  // Create bricks.\n  const bricks = [];\n\n  for (let i = 0; i < BRICK_ROW_COUNT; i++) {\n    bricks[i] = [];\n\n    for (let j = 0; j < BRICK_COLUMN_COUNT; j++) {\n      const x = i * (brickInfo.width + brickInfo.padding) + brickInfo.offsetX;\n      const y = j * (brickInfo.height + brickInfo.padding) + brickInfo.offsetY;\n\n      bricks[i][j] = {\n        x, y, ...brickInfo,\n      };\n    }\n  }\n\n  update();\n\n  // Call all Draw function.\n  function allDraw() {\n    // Clear Canvas.\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    drawBall();\n    drawPaddle();\n    drawScore();\n    drawBricks();\n  }\n\n  // Update Canvas drawing and Animation.\n  function update() {\n    movePaddle();\n    moveBall();\n    allDraw();\n    requestAnimationFrame(update);\n  }\n\n  // Draw ball on canvas.\n  function drawBall() {\n    ctx.beginPath();\n    ctx.arc(ball.x, ball.y, ball.size, 0, Math.PI * 2);\n    ctx.fillStyle = MAIN_COLOR;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  // Draw paddle on canvas.\n  function drawPaddle() {\n    ctx.beginPath();\n    ctx.rect(paddle.x, paddle.y, paddle.width, paddle.height);\n    ctx.fillStyle = MAIN_COLOR;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  // Draw score on canvas.\n  function drawScore() {\n    ctx.font = '20px Arial';\n    ctx.fillText(`Score: ${score}`, canvas.width - 100, 30);\n  }\n\n  // Draw bricks on canvas\n  function drawBricks() {\n    bricks.forEach((column) => {\n      column.forEach((brick) => {\n        ctx.beginPath();\n        ctx.rect(brick.x, brick.y, brick.width, brick.height);\n        ctx.fillStyle = brick.visible ? MAIN_COLOR : 'transparent';\n        ctx.fill();\n        ctx.closePath();\n      });\n    });\n  }\n\n  // Move paddle on canvas.\n  function movePaddle() {\n    paddle.x += paddle.dx;\n\n    if (paddle.x + paddle.width > canvas.width) {\n      paddle.x = canvas.width - paddle.width;\n    }\n\n    if (paddle.x < 0) {\n      paddle.x = 0;\n    }\n  }\n\n  // Move ball on canvas.\n  function moveBall() {\n    ball.x += ball.dx;\n    ball.y += ball.dy;\n\n    // Wall collision (right / left)\n    if (ball.x + ball.size > canvas.width || ball.x - ball.size < 0) {\n      ball.dx *= -1;\n    }\n\n    // Wall collision (top / bottom)\n    if (ball.y + ball.size > canvas.height || ball.y - ball.size < 0) {\n      ball.dy *= -1;\n    }\n\n    // Paddle collision.\n    if (\n      ball.x - ball.size > paddle.x\n\t\t\t&& ball.x + ball.size < paddle.x + paddle.width\n\t\t\t&& ball.y + ball.size > paddle.y\n    ) {\n      ball.dy = -ball.speed;\n    }\n\n    // Bricks collision.\n    bricks.forEach((column) => {\n      column.forEach((brick) => {\n        if (brick.visible) {\n          if (\n            ball.x - ball.size > brick.x\n\t\t\t\t\t\t&& ball.x + ball.size < brick.x + brick.width\n\t\t\t\t\t\t&& ball.y + ball.size > brick.y\n\t\t\t\t\t\t&& ball.y - ball.size < brick.y + brick.height\n          ) {\n            ball.dy *= -1;\n            brick.visible = false;\n            increaseScore();\n          }\n        }\n      });\n    });\n\n    // Hit bottom wall - Lose !\n    if (ball.y + ball.size > canvas.height) {\n      showAllBricks();\n      score = 0;\n    }\n  }\n\n  // Increase score.\n  function increaseScore() {\n    score++;\n\n    if (score % (BRICK_ROW_COUNT * BRICK_ROW_COUNT) === 0) {\n      showAllBricks();\n    }\n  }\n\n  // Make all Bricks appear.\n  function showAllBricks() {\n    bricks.forEach((column) => {\n      column.forEach((brick) => (brick.visible = true));\n    });\n  }\n\n  // KeyDown Event.\n  function keyDown(event) {\n    const key = event.key;\n\n    if (key === 'Right' || key === 'ArrowRight') {\n      paddle.dx = paddle.speed;\n    } else if (key === 'Left' || key === 'ArrowLeft') {\n      paddle.dx = -paddle.speed;\n    }\n  }\n\n  // KeyUp Event.\n  function keyUp(event) {\n    const key = event.key;\n\n    if (\n      key === 'Right'\n      || key === 'ArrowRight'\n      || key === 'Left'\n      || key === 'ArrowLeft'\n    ) {\n      paddle.dx = 0;\n    }\n  }\n}\n"]}